--- a/net/minecraft/block/MushroomBlock.java
+++ b/net/minecraft/block/MushroomBlock.java
@@ -1,6 +1,7 @@
 package net.minecraft.block;
 
 import java.util.Random;
+
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.shapes.ISelectionContext;
 import net.minecraft.util.math.shapes.VoxelShape;
@@ -64,7 +65,7 @@
       BlockState blockstate = p_196260_2_.func_180495_p(blockpos);
       Block block = blockstate.func_177230_c();
       if (block != Blocks.field_150391_bh && block != Blocks.field_196661_l) {
-         return p_196260_2_.func_226659_b_(p_196260_3_, 0) < 13 && this.func_200014_a_(blockstate, p_196260_2_, blockpos);
+         return p_196260_2_.func_226659_b_(p_196260_3_, 0) < 13 && blockstate.canSustainPlant(p_196260_2_, blockpos, net.minecraft.util.Direction.UP, this);
       } else {
          return true;
       }
@@ -92,12 +93,12 @@
       }
    }
 
-   public boolean func_176473_a(IBlockReader p_176473_1_, BlockPos p_176473_2_, BlockState p_176473_3_, boolean p_176473_4_) {
+   public boolean canGrow(IBlockReader p_176473_1_, BlockPos p_176473_2_, BlockState p_176473_3_, boolean p_176473_4_) {
       return true;
    }
 
    public boolean func_180670_a(World p_180670_1_, Random p_180670_2_, BlockPos p_180670_3_, BlockState p_180670_4_) {
-      return (double)p_180670_2_.nextFloat() < 0.4D;
+      return canUseFertilizer(p_180670_1_, p_180670_2_, p_180670_3_, p_180670_4_, (net.minecraftforge.plants.IFertilizer) net.minecraft.item.Items.field_196106_bc);
    }
 
    public void func_225535_a_(ServerWorld p_225535_1_, Random p_225535_2_, BlockPos p_225535_3_, BlockState p_225535_4_) {
@@ -107,4 +108,5 @@
    public boolean func_201783_b(BlockState p_201783_1_, IBlockReader p_201783_2_, BlockPos p_201783_3_) {
       return true;
    }
+   public boolean canUseFertilizer(World worldIn, Random rand, BlockPos pos, BlockState state, net.minecraftforge.plants.IFertilizer fertilizer) { return (double)rand.nextFloat() < 0.4D * fertilizer.getPotency();}
 }
